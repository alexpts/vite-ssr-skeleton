В процессе создания веб страницы есть стороны:
- браузер (запрашивает)
- BFF (SSR)
- API
- Proxy (опционально)

Предполагаю, что следующие схемы будут наиболее оптимальынми и простыми с точки зрения архитектуры:
1) Браузер шлет все запросы на прокси сервер и не знает о разделении между BFF/API.
Прокси сервер маршрутизирует запросы на API по префиксу в URI запроса + header isXHR.
Иные запросы прокси маршрутизирует на BFF (Backend For Frontend / SSR).
BFF сервис всегда отдает HTML страницы, не json (нужно ислозовать с редиректами тему для oauth).

2) Браузер шлет все запросы на BFF, BFF с помощью middleware детирминирует запросы на API
с помощью префикса URI и isXHR и проксирует запросы в сервис API. Являяесь сам прокси сервером.
Структура сохраняется как в 1 вариенте схемы, но роль прокси сервера выполняется middleware приложения
вместо nginx. Число компонентов ниже, но performance хуже.

BFF может паралельно запрашивать из API данные и кешировать на стороне nodejs
